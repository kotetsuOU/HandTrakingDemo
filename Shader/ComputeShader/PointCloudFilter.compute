#pragma kernel CSMain

StructuredBuffer<float3> rawVertices;
AppendStructuredBuffer<float3> filteredVertices;
cbuffer Params
{
    float4x4 localToWorld;
    float3 globalThreshold1;
    float3 globalThreshold2;
    uint vertexCount;
};

[numthreads(256, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    uint i = id.x;
    if (i >= vertexCount)
        return;

    float3 local = rawVertices[i];
    float4 global4 = mul(localToWorld, float4(local, 1.0));
    float3 global = global4.xyz;

    if (global.x >= globalThreshold1.x && global.x <= globalThreshold2.x &&
        global.y >= globalThreshold1.y && global.y <= globalThreshold2.y &&
        global.z >= globalThreshold1.z && global.z <= globalThreshold2.z)
    {
        filteredVertices.Append(global);
    }
}